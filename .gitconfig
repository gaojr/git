[core]
    quotepath = false # 不会对 0×80 以上的字符进行 quote
[user]
    name = username
    email = emailname@email.com
[color]
    status = auto
    diff = auto
    branch = auto
    interactive = auto
[alias]
    br = branch
    co = checkout
    rb = rebase
    st = status --untracked-files --show-stash
    # 克隆时初始化子模块
    cr = clone --recursive
    # 拉取所有分支 HEAD 信息
    fa = fetch --all --prune
     # 切换到 master 分支
    com = checkout master
    # 切换到 develop 分支
    cod = checkout develop
    # 基于 develop 分支变基
    rbd = rebase develop
    # 获取远程分支到本地分支
    ## git checkout -b origin/remoteName localName
    track =  checkout --track
    # 当前分支重命名
    rename = branch --move
    # 删除分支
    brd = branch -d
    brD = branch -D
    # 强制推送
    pf = push --force
    # 安全强制推送
    pfw = push --force-with-lease
    # 当前分支日志
    lg = log --color --graph --pretty=format:'%Cred%h%Creset - %s %Cblue<%cn> %Cgreen(%cr) %C(yellow)%d' --abbrev-commit
    # 所有分支日志
    lga = log --color --graph --pretty=format:'%Cred%h%Creset - %s %Cblue<%cn> %Cgreen(%cr) %C(yellow)%d' --abbrev-commit --all
    # 撤销
    rs = reset
    rsh = reset --hard
    # 上一个
    last = reset HEAD~1
    back = reset --hard HEAD~1
    # 暂存
    tmp = commit -a -m 'tmp'
    # 存储
    sl = stash list
    ss = stash show
    sa = stash apply
    sa1 = stash apply stash@{1}
    sp = stash pop
    sp1 = stash pop stash@{1}
    sd = stash drop
    sd1 = stash drop stash@{1}
    save = stash save --include-untracked
    temp = stash save --include-untracked '暂存'
    # 对比两个分支
    dif = diff --stat
    # 与 develop 分支对比
    difd = diff --stat develop
    # git flow 相关
    feature = flow feature start --showcommands
    ## flow feature publish
    ## flow feature finish
    bugfix = flow bugfix start --showcommands
    hotfix = flow hotfix start --showcommands
    # 从object数据库中删除所有不可达的object
    clear = gc --prune=now --aggressive
